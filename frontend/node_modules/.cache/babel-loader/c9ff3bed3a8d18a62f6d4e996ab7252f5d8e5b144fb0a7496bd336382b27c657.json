{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\project\\\\frontend\\\\src\\\\Components\\\\Artisan\\\\Product.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ProductDetails from './ProductDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = () => {\n  _s();\n  // Assume you have products and artisans state\n  const [products, setProducts] = useState([{\n    id: 1,\n    name: 'makrouth',\n    description: 'Description of Product 1',\n    comments: [] // Array to store comments for this product\n  }, {\n    id: 2,\n    name: 'zarbya',\n    description: 'Description of Product 2',\n    comments: []\n  }\n  // Add more products as needed\n  ]);\n\n  const [artisans, setArtisans] = useState([{\n    id: 1,\n    name: 'syrine eladeb'\n  }, {\n    id: 2,\n    name: 'ryma smith'\n  }]);\n\n  // Handle adding comments for a specific product\n  const handleAddComment = (productId, newComment) => {\n    // Find the product in the state\n    const updatedProducts = products.map(product => product.id === productId ? {\n      ...product,\n      comments: [...product.comments, newComment]\n    } : product);\n\n    // Update the state with the new comment\n    setProducts(updatedProducts);\n\n    // Implement logic to send the new comment to the server\n    console.log(`Add comment for product ${productId}: ${newComment.text}`);\n    // You may want to send the comment to the server here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductDetails, {\n      products: products,\n      artisans: artisans,\n      onAddComment: handleAddComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"9QnHA60KECWlraDlSo52ag+iHkI=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useState","ProductDetails","jsxDEV","_jsxDEV","Product","_s","products","setProducts","id","name","description","comments","artisans","setArtisans","handleAddComment","productId","newComment","updatedProducts","map","product","console","log","text","children","onAddComment","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/project/frontend/src/Components/Artisan/Product.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ProductDetails from './ProductDetails';\r\n\r\nconst Product = () => {\r\n  // Assume you have products and artisans state\r\n  const [products, setProducts] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'makrouth',\r\n      description: 'Description of Product 1',\r\n      comments: [], // Array to store comments for this product\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'zarbya',\r\n      description: 'Description of Product 2',\r\n      comments: [],\r\n    },\r\n    // Add more products as needed\r\n  ]);\r\n\r\n  const [artisans, setArtisans] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'syrine eladeb',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'ryma smith',\r\n    },\r\n  \r\n  ]);\r\n\r\n  // Handle adding comments for a specific product\r\n  const handleAddComment = (productId, newComment) => {\r\n    // Find the product in the state\r\n    const updatedProducts = products.map((product) =>\r\n      product.id === productId\r\n        ? { ...product, comments: [...product.comments, newComment] }\r\n        : product\r\n    );\r\n\r\n    // Update the state with the new comment\r\n    setProducts(updatedProducts);\r\n\r\n    // Implement logic to send the new comment to the server\r\n    console.log(`Add comment for product ${productId}: ${newComment.text}`);\r\n    // You may want to send the comment to the server here\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Render ProductDetails with onAddComment prop */}\r\n      <ProductDetails products={products} artisans={artisans} onAddComment={handleAddComment} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CACvC;IACEQ,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,0BAA0B;IACvCC,QAAQ,EAAE,EAAE,CAAE;EAChB,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,0BAA0B;IACvCC,QAAQ,EAAE;EACZ;EACA;EAAA,CACD,CAAC;;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CACvC;IACEQ,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;EACR,CAAC,CAEF,CAAC;;EAEF;EACA,MAAMK,gBAAgB,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IAClD;IACA,MAAMC,eAAe,GAAGX,QAAQ,CAACY,GAAG,CAAEC,OAAO,IAC3CA,OAAO,CAACX,EAAE,KAAKO,SAAS,GACpB;MAAE,GAAGI,OAAO;MAAER,QAAQ,EAAE,CAAC,GAAGQ,OAAO,CAACR,QAAQ,EAAEK,UAAU;IAAE,CAAC,GAC3DG,OACN,CAAC;;IAED;IACAZ,WAAW,CAACU,eAAe,CAAC;;IAE5B;IACAG,OAAO,CAACC,GAAG,CAAE,2BAA0BN,SAAU,KAAIC,UAAU,CAACM,IAAK,EAAC,CAAC;IACvE;EACF,CAAC;;EAED,oBACEnB,OAAA;IAAAoB,QAAA,eAEEpB,OAAA,CAACF,cAAc;MAACK,QAAQ,EAAEA,QAAS;MAACM,QAAQ,EAAEA,QAAS;MAACY,YAAY,EAAEV;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEV,CAAC;AAACvB,EAAA,CArDID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAuDb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}